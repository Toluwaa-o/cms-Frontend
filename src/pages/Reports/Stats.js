import { useState , useEffect } from 'react'
import instance from '../../components/Axios/Config'
import Loader from '../../components/UI/Loader'
import BarChart from '../../components/Reports/BarChart'
import Stat from '../../components/Reports/Stat'

export default function Stats() {

  const [stats, setStats ] = useState({defaultStats: [], monthlyApplications: []})

  useEffect(() => {
    instance.get('/reports/stats')
    .then(res => {
      setStats({
        defaultStats: [
          {
            title: 'Pending',
            count: res.data.defaultStats.pending || 0,
            color: '#d66a6a',
            bcg: '#ffeeee',
            icon: <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" style={{fill: '#d66a6a'}}><path d="M12.25 2c-5.514 0-10 4.486-10 10s4.486 10 10 10 10-4.486 10-10-4.486-10-10-10zM18 13h-6.75V6h2v5H18v2z"></path></svg>,
            status:'pending'
          },
          {
            title: 'Active',
            count: res.data.defaultStats.active || 0,
            color: '#e9b949',
            bcg: '#fcefc7',
            icon: <svg width="40" height="40" style={{fill: '#e9b949'}} viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg"><g id="Processing"><path d="M31.1057,37.8494a3.5971,3.5971,0,0,1,.425-4.5713L33.4192,31.39a3.5948,3.5948,0,0,1,4.5713-.4246l1.935,1.3236a1.7286,1.7286,0,0,1,.0908-.2869c.2579-.54,1.4732-3.2485,1.6856-3.595A3.5882,3.5882,0,0,1,44.76,26.6924h2.67a3.5744,3.5744,0,0,1,.575.051,2.01,2.01,0,0,0,.0383-.3812V22.6611a2.0179,2.0179,0,0,0-1.6455-1.9824l-4.2891-.8047A1.832,1.832,0,0,1,40.7107,18.7a17.64,17.64,0,0,0-.6944-1.6788,1.8368,1.8368,0,0,1,.1612-1.8173l2.4619-3.6a2.02,2.02,0,0,0-.2383-2.5654L39.7839,6.4218a2.0186,2.0186,0,0,0-2.5654-.2388l-3.6,2.4629a1.8329,1.8329,0,0,1-1.8174.16,17.4516,17.4516,0,0,0-1.68-.6934A1.8356,1.8356,0,0,1,28.948,6.7128l-.8047-4.2881A2.0154,2.0154,0,0,0,26.1619.7792H22.4607a2.0181,2.0181,0,0,0-1.9824,1.6451l-.8047,4.2885A1.8357,1.8357,0,0,1,18.5,8.1122a17.279,17.279,0,0,0-1.6787.6934,1.837,1.837,0,0,1-1.8183-.16l-3.6-2.4629a2.02,2.02,0,0,0-2.5655.2388L6.2214,9.0385a2.02,2.02,0,0,0-.2392,2.5654l2.4629,3.6a1.8352,1.8352,0,0,1,.16,1.8178,17.3743,17.3743,0,0,0-.6943,1.6792A1.8327,1.8327,0,0,1,6.5124,19.874l-4.288.8047A2.0176,2.0176,0,0,0,.5788,22.6611v3.7011a2.0177,2.0177,0,0,0,1.6456,1.9825l4.2871.8042a1.8332,1.8332,0,0,1,1.3994,1.1748,17.4507,17.4507,0,0,0,.6943,1.6782,1.8355,1.8355,0,0,1-.16,1.8179l-2.4629,3.6a2.0179,2.0179,0,0,0,.2392,2.5649l2.6162,2.6172a2.0182,2.0182,0,0,0,2.5655.2383l3.6-2.4624a1.8408,1.8408,0,0,1,1.8183-.16,17.1578,17.1578,0,0,0,1.6787.6939,1.8357,1.8357,0,0,1,1.1739,1.3994l.8047,4.2886a2.0181,2.0181,0,0,0,1.9824,1.645h3.7012a2.0011,2.0011,0,0,0,.7712-.159,3.5647,3.5647,0,0,1-.1-.7956v-2.67a3.5969,3.5969,0,0,1,1.6492-3.0227A31.9678,31.9678,0,0,1,32.6177,40.06Zm-6.7947-5.73a7.6078,7.6078,0,1,1,7.6077-7.6076A7.6078,7.6078,0,0,1,24.311,32.1193Z"/><path d="M61.9643,43.5434l-3.0942-.58a1.6825,1.6825,0,0,1-1.2832-1.0815,12.0418,12.0418,0,0,0-.4858-1.1764,1.6826,1.6826,0,0,1,.1433-1.67l1.7768-2.5973a1.0946,1.0946,0,0,0-.1294-1.3919l-1.8882-1.8881a1.0943,1.0943,0,0,0-1.3918-.1294l-2.5974,1.7766a1.6819,1.6819,0,0,1-1.67.1433,12.16,12.16,0,0,0-1.1763-.4857,1.6821,1.6821,0,0,1-1.0815-1.2833l-.5806-3.0943a1.0948,1.0948,0,0,0-1.0757-.8928H44.76a1.0948,1.0948,0,0,0-1.0757.8928l-.5806,3.0943a1.6819,1.6819,0,0,1-1.0813,1.2832,12.2,12.2,0,0,0-1.1765.4858,1.682,1.682,0,0,1-1.67-.1433l-2.5972-1.7766a1.0946,1.0946,0,0,0-1.392.1294L33.2986,35.046a1.0946,1.0946,0,0,0-.1294,1.3919l1.7768,2.5972a1.6824,1.6824,0,0,1,.1433,1.67,12.0623,12.0623,0,0,0-.4858,1.1764A1.6825,1.6825,0,0,1,33.32,42.963l-3.0942.58a1.0949,1.0949,0,0,0-.8929,1.0759v2.67a1.0946,1.0946,0,0,0,.8929,1.0758l3.0942.58a1.6825,1.6825,0,0,1,1.2832,1.0816,12.05,12.05,0,0,0,.4858,1.1763,1.6821,1.6821,0,0,1-.1433,1.67l-1.7768,2.5973a1.0946,1.0946,0,0,0,.1294,1.3919l1.8882,1.8882a1.0945,1.0945,0,0,0,1.392.1294l2.5972-1.7766a1.682,1.682,0,0,1,1.67-.1434,12.15,12.15,0,0,0,1.1765.4858,1.6822,1.6822,0,0,1,1.0813,1.2833l.5806,3.0942a1.0945,1.0945,0,0,0,1.0757.8927h2.67a1.0945,1.0945,0,0,0,1.0757-.8926l.5806-3.0944a1.6822,1.6822,0,0,1,1.0813-1.2832,12.1184,12.1184,0,0,0,1.1765-.4858,1.682,1.682,0,0,1,1.67.1434L55.6116,58.88a1.0947,1.0947,0,0,0,1.392-.1294l1.8882-1.8882a1.0944,1.0944,0,0,0,.1294-1.3918l-1.7768-2.5974a1.6821,1.6821,0,0,1-.1431-1.67,12.0988,12.0988,0,0,0,.4856-1.1763A1.6825,1.6825,0,0,1,58.87,48.9457l3.0942-.58a1.0944,1.0944,0,0,0,.8929-1.0758v-2.67A1.0946,1.0946,0,0,0,61.9643,43.5434ZM46.0952,52.1669a6.2125,6.2125,0,1,1,6.2126-6.2126A6.2126,6.2126,0,0,1,46.0952,52.1669Z"/></g></svg>,
            status:'active'
          },
          {
            title: 'Responded',
            count: res.data.defaultStats.responded || 0,
            color: '#647acb',
            bcg: '#e0e8f9',
            icon: <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" style={{fill: '#647acb'}}><path d="m2.394 13.742 4.743 3.62 7.616-8.704-1.506-1.316-6.384 7.296-3.257-2.486zm19.359-5.084-1.506-1.316-6.369 7.279-.753-.602-1.25 1.562 2.247 1.798z"></path></svg>,
            status:'responded'
          },
          {
            title: 'Total',
            count: res.data.defaultStats.responded + res.data.defaultStats.active + res.data.defaultStats.pending || 0,
            color: '#ffffff',
            bcg: 'var(--lightBlue)',
            icon: <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" style={{fill: '#ffffff'}}><path d="M12 10c3.976 0 8-1.374 8-4s-4.024-4-8-4-8 1.374-8 4 4.024 4 8 4z"></path><path d="M4 10c0 2.626 4.024 4 8 4s8-1.374 8-4V8c0 2.626-4.024 4-8 4s-8-1.374-8-4v2z"></path><path d="M4 14c0 2.626 4.024 4 8 4s8-1.374 8-4v-2c0 2.626-4.024 4-8 4s-8-1.374-8-4v2z"></path><path d="M4 18c0 2.626 4.024 4 8 4s8-1.374 8-4v-2c0 2.626-4.024 4-8 4s-8-1.374-8-4v2z"></path></svg>,
            status: null
          }

        ], monthlyApplications: res.data.monthlyApplications
      })
      console.log(res)
    })
    .catch(err => console.log(err))
  }, [])

  return (
    <div className='stats'>
      <h2>Report Stats</h2>
      {stats.monthlyApplications.length > 0 ? <><div className='stat-count'>
       {stats.defaultStats.length > 0 ? stats.defaultStats.map(item => {
        return <Stat {...item} />
       }) : null}
      </div>

      <div className='barChart'>
        <h2>Reports (Last 6 Months)</h2>
      {stats.monthlyApplications.length > 0 && <BarChart data={stats.monthlyApplications}/> }
      </div></> : <Loader />}
    </div>
  )
}
